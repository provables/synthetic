# https://taskfile.dev

version: '3'

tasks:
  build:
    desc: Build the library
    run: once
    cmds:
      - lake build
    deps:
      - get-cache
    sources:
      - ./**/*.lean
      - lakefile.toml
      - exclude: ./**/Main.lean
    generates:
      - .lake/build/lib/lean/Genseq.olean

  compile:
    desc: Compile genseq executable
    run: once
    cmds:
      - lake build genseq
    sources:
      - ./**/*.lean
      - lakefile.toml
    generates:
      - .lake/build/bin/genseq
    deps:
      - get-cache
      - build

  run:
    desc: Run genseq server
    vars:
      LEAN_PATH:
        sh: |
          echo -n ".lake/build/lib/lean"
          for f in $(ls .lake/packages/); do 
            echo -n ":.lake/packages/$f/.lake/build/lib/lean"; 
          done
    cmds:
      - 'LEAN_PATH={{ .LEAN_PATH }} .lake/build/bin/genseq {{.CLI_ARGS}}'
    deps:
      - build
      - compile
  
  supervise: 
    desc: Run genseq server in supervised mode (use `stop-supervise` for cleanly stopping it)
    cmds: 
      - 'supervisord -c supervisord.conf'
    status:
      - supervisorctl status | grep RUNNING    

  stop-supervise:
    desc: Stop genseq and its supervisor
    cmds:
      - supervisorctl stop all
      - supervisorctl shutdown
      - lsof -i:8000 -t | xargs -r kill -9
    status:
      - "! $(supervisorctl status > /dev/null)"

  get-cache-for-dir:
    internal: true
    run: once
    dir: '{{.DIR | default "." }}'
    cmds:
      - lake exe cache get
    status:
      - test -f .lake/packages/mathlib/.lake/build/lib/lean/Mathlib.olean
    
  get-cache:
    desc: Ensure Mathlib cache is available
    cmds:
      - for: ["."]
        task: get-cache-for-dir
        vars:
          DIR: '{{ .ITEM }}'
